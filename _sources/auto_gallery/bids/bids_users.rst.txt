
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_gallery/bids/bids_users.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_gallery_bids_bids_users.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_gallery_bids_bids_users.py:


BIDS directory parsing (user mode)
==================================

Credit: A Grigis

pycaravel is a Python package that enables you to parse various source of data.
In this tutorial you will learn how to parse and search in a BIDS directory.

First checks
------------

In order to test if pycaravel package is installed on your machine, you can
check the package version.

.. GENERATED FROM PYTHON SOURCE LINES 16-23

.. code-block:: default


    import os
    import caravel

    print(caravel.__version__)
    print(caravel.info())


.. GENERATED FROM PYTHON SOURCE LINES 24-31

Create a parser for your project
--------------------------------

The package provides a common interface to parse a BIDS directory. The
parsing rules are defined by projects in the module, so we will beed to
specify the project name you are working on. For the moement it is not
possible to specify these rules via the API.

.. GENERATED FROM PYTHON SOURCE LINES 31-37

.. code-block:: default


    cwdir = os.path.dirname(os.path.realpath(__file__))
    parser = caravel.get_parser(
        project="hbn", confdir=os.path.join(cwdir, os.pardir, "conf"),
        layoutdir=cwdir)


.. GENERATED FROM PYTHON SOURCE LINES 38-41

You can now list the available configurations for your project, and the
available layout representations pre-generated. Note that these
representations are sorted by dates, and that the latest one will be used.

.. GENERATED FROM PYTHON SOURCE LINES 41-47

.. code-block:: default


    from pprint import pprint

    pprint(parser.conf)
    pprint(parser.representation)


.. GENERATED FROM PYTHON SOURCE LINES 48-49

You can export the whole 'sourcedata' layout in a pandas DataFrame.

.. GENERATED FROM PYTHON SOURCE LINES 49-52

.. code-block:: default


    print(parser.export_layout("sourcedata"))


.. GENERATED FROM PYTHON SOURCE LINES 53-56

It is also possible to filter this dataset. You need first to list all the
avaliable filtering keys, then list all the availables values for the
filtering key(s) of interest, and finally filter your dataset.

.. GENERATED FROM PYTHON SOURCE LINES 56-66

.. code-block:: default


    print(parser.list_keys("sourcedata"))
    print(parser.list_values("sourcedata", "subject"))
    print(parser.list_values("sourcedata", "modality"))
    search1 = parser.filter_layout("sourcedata", subject="NDARLU606ZDD",
                                   modality="anat|func")
    print(search1)
    search2 = parser.filter_layout("sourcedata", extension="tsv")
    print(search2)


.. GENERATED FROM PYTHON SOURCE LINES 67-70

Finally you may want to ask the system to load the filtered data. Only a
couple of file extensions are supported. If no loader has been found the
filename is returned

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: default

    if not search1.empty:
        data1 = parser.load_data("sourcedata", search1)
        pprint(data1)
    if not search2.empty:
        data2 = parser.load_data("sourcedata", search2)
        pprint(data2)


.. GENERATED FROM PYTHON SOURCE LINES 78-82

And for the derivatives
-----------------------

We can do the same for the derivatives

.. GENERATED FROM PYTHON SOURCE LINES 82-99

.. code-block:: default



    print(parser.export_layout("derivatives"))
    print(parser.list_keys("derivatives"))
    print(parser.list_values("derivatives", "process"))
    search3 = parser.filter_layout("derivatives", subject="NDARAE199TDD",
                                   process="scalars")
    print(search3)
    data3 = parser.load_data("derivatives", search3)
    pprint(data3)
    search3bis = parser.filter_layout("derivatives", process="tbss_stats",
                                      extension="tsv")
    print(search3bis)
    data3bis = parser.load_data("derivatives", search3bis)
    pprint(data3bis)



.. GENERATED FROM PYTHON SOURCE LINES 100-104

And for the clinical data
-------------------------

We can do the same for the clinical data denoted in BIDS phenotype

.. GENERATED FROM PYTHON SOURCE LINES 104-110

.. code-block:: default


    print(parser.export_layout("phenotype"))
    search4 = parser.filter_layout("phenotype", extension="tsv")
    print(search4)
    data4 = parser.load_data("phenotype", search4)
    pprint(data4)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)

**Estimated memory usage:**  0 MB


.. _sphx_glr_download_auto_gallery_bids_bids_users.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: bids_users.py <bids_users.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: bids_users.ipynb <bids_users.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
